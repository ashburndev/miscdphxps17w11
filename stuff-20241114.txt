7:20 AM 11/14/2024

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

Microsoft Windows [Version 10.0.22631.4317]
(c) Microsoft Corporation. All rights reserved.

C:\Users\DavidHolberton>cd Documents\dir-stuff

C:\Users\DavidHolberton\Documents\dir-stuff>notepad stuff-20241114.txt

C:\Users\DavidHolberton\Documents\dir-stuff>code --version
1.94.2
384ff7382de624fb94dbaf6da11977bba1ecd427
x64

C:\Users\DavidHolberton\Documents\dir-stuff>code .

C:\Users\DavidHolberton\Documents\dir-stuff>

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

10/18/2024  06:05 AM       191,867,538 OpenJDK17U-jdk_x64_linux_hotspot_17.0.13_11.tar.gz
10/18/2024  06:06 AM                66 OpenJDK17U-jdk_x64_linux_hotspot_17.0.13_11.tar.gz.sha256
10/18/2024  06:07 AM        46,082,619 OpenJDK17U-jre_x64_linux_hotspot_17.0.13_11.tar.gz
10/18/2024  06:08 AM                66 OpenJDK17U-jre_x64_linux_hotspot_17.0.13_11.tar.gz.sha256
10/21/2024  06:37 AM       191,161,562 OpenJDK17U-jdk_x64_windows_hotspot_17.0.13_11.zip
10/21/2024  06:38 AM                66 OpenJDK17U-jdk_x64_windows_hotspot_17.0.13_11.zip.sha256
10/21/2024  06:38 AM        44,083,354 OpenJDK17U-jre_x64_windows_hotspot_17.0.13_11.zip
10/21/2024  06:39 AM                66 OpenJDK17U-jre_x64_windows_hotspot_17.0.13_11.zip.sha256
10/21/2024  07:04 AM       100,393,976 VSCodeUserSetup-x64-1.94.2.exe
10/21/2024  07:04 AM       100,393,688 VSCodeSetup-x64-1.94.2.exe
10/21/2024  07:04 AM       140,560,854 VSCode-win32-x64-1.94.2.zip
10/25/2024  07:57 AM            36,510 Blank OCI.pdf
11/14/2024  08:57 AM       103,356,872 VSCodeUserSetup-x64-1.95.2.exe
11/14/2024  08:57 AM       103,356,496 VSCodeSetup-x64-1.95.2.exe
11/14/2024  08:58 AM       144,703,179 VSCode-win32-x64-1.95.2.zip
             733 File(s) 116,039,844,924 bytes
              12 Dir(s)  448,417,574,912 bytes free

C:\Users\DavidHolberton\Downloads>

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

https://www.oracle.com/java/technologies/downloads/

JDK Development Kit 21.0.5 downloads
JDK Development Kit 21.0.5 downloads
Java SE Development Kit 11.0.25
Java SE Development Kit 8u431

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

C:\Users\DavidHolberton\Documents\dir-stuff\stuff-20241007.txt

https://hub.docker.com/_/eclipse-temurin
https://hub.docker.com/r/amd64/eclipse-temurin/

https://hub.docker.com/r/amd64/eclipse-temurin/tags?name=17
    docker pull amd64/eclipse-temurin:17.0.12_7-jdk

https://hub.docker.com/r/amd64/eclipse-temurin/tags?name=21
    docker pull amd64/eclipse-temurin:21.0.4_7-jdk

C:\Users\DavidHolberton\Documents\dir-stuff\stuff-20241017.txt

cd C:\Users\DavidHolberton\sbprojs\hellonebula
docker run -p 8080:8080 hellonebula17 -d -t hellonebula17:1.1

docker --version
docker container ls
docker container ls -a

docker run -p 8080:8080 hellonebula17 -d -t hellonebula17:1.1

C:\>docker --version
Docker version 23.0.5, build bc4487a

C:\>docker images
REPOSITORY              TAG             IMAGE ID       CREATED         SIZE
hellonebula17           latest          f3ed7c8c09d2   5 weeks ago     437MB
amd64/eclipse-temurin   17.0.12_7-jdk   14ef1a4e4983   2 months ago    414MB
amd64/eclipse-temurin   21.0.4_7-jdk    1fb508d963b8   2 months ago    442MB
debian                  latest          5027089adc4c   6 months ago    117MB
eclipse-temurin         17-jdk-focal    bfa8957a99b7   6 months ago    411MB
nginx                   1.23            a7be6198544f   18 months ago   142MB
busybox                 latest          8135583d97fe   18 months ago   4.86MB
hello-world             latest          9c7a54a9a43c   18 months ago   13.3kB
nginx                   1.22            0f8498f13f3a   19 months ago   142MB

C:\>
C:\>docker --version
Docker version 23.0.5, build bc4487a

C:\>docker images
REPOSITORY              TAG              IMAGE ID       CREATED         SIZE
amd64/eclipse-temurin   21.0.5_11-jre    43b609608ac1   3 weeks ago     287MB
amd64/eclipse-temurin   17.0.13_11-jre   6564d80723d3   3 weeks ago     263MB
amd64/eclipse-temurin   21.0.5_11-jdk    dc4d32ecff31   3 weeks ago     447MB
amd64/eclipse-temurin   11.0.25_9-jre    3ee8e537cd4f   3 weeks ago     263MB
amd64/eclipse-temurin   11.0.25_9-jdk    80af930d4084   3 weeks ago     401MB
amd64/eclipse-temurin   8u432-b06-jdk    39394a971a9d   3 weeks ago     327MB
amd64/eclipse-temurin   8u432-b06-jre    5f53673d1e61   3 weeks ago     231MB
amd64/eclipse-temurin   17.0.13_11-jdk   83cf92461326   3 weeks ago     419MB
hellonebula17           latest           f3ed7c8c09d2   5 weeks ago     437MB
amd64/eclipse-temurin   17.0.12_7-jdk    14ef1a4e4983   2 months ago    414MB
amd64/eclipse-temurin   21.0.4_7-jdk     1fb508d963b8   2 months ago    442MB
debian                  latest           5027089adc4c   6 months ago    117MB
eclipse-temurin         17-jdk-focal     bfa8957a99b7   6 months ago    411MB
nginx                   1.23             a7be6198544f   18 months ago   142MB
busybox                 latest           8135583d97fe   18 months ago   4.86MB
hello-world             latest           9c7a54a9a43c   18 months ago   13.3kB
nginx                   1.22             0f8498f13f3a   19 months ago   142MB

C:\>
C:\>docker container ls
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

C:\>docker container ls -a
CONTAINER ID   IMAGE           COMMAND                  CREATED       STATUS                     PORTS     NAMES
b7ed524adf2f   hellonebula17   "java -jar /app/hell…"   4 weeks ago   Exited (143) 3 weeks ago             happy_davinci
8afced7d0570   hellonebula17   "java -jar /app/hell…"   5 weeks ago   Exited (130) 5 weeks ago             quirky_lovelace

C:\>

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

https://hub.docker.com/_/eclipse-temurin

Official Images for OpenJDK binaries built by Eclipse Temurin.

docker pull eclipse-temurin

Quick reference

    Maintained by:
    Adoptium⁠

Where to get help:
Adoptium Slack⁠
; Adoptium Support⁠
Supported tags and respective Dockerfile links

Note: the description for this image is longer than the Hub length limit of 25000, so the "Supported tags" list has been trimmed to compensate. See also docker/hub-feedback#238⁠
and docker/roadmap#475⁠

    See "Supported tags and respective Dockerfile links" at https://github.com/docker-library/docs/tree/master/eclipse-temurin/README.md⁠

Quick reference (cont.)

    Where to file issues:
    GitHub⁠

; The adoptium support⁠

page has more information on quality, roadmap and support levels for Eclipse Temurin builds. Vulnerabilities not related to Eclipse Temurin itself should be be raised to their respective projects (e.g Ubuntu vulnerabilities need to be raised directly to the Ubuntu project).

Supported architectures: (more info⁠

)
amd64, arm32v7, arm64v8, ppc64le, riscv64, s390x, windows-amd64

Published image artifact details:
repo-info repo's repos/eclipse-temurin/ directory⁠
(history⁠

)
(image metadata, transfer size, etc)

Image updates:
official-images repo's library/eclipse-temurin label⁠

official-images repo's library/eclipse-temurin file⁠ (history⁠

)

Source of this description:
docs repo's eclipse-temurin/ directory⁠
(history⁠

    )

Overview

The images in this repository contain OpenJDK binaries that are built by Eclipse Temurin.
What is Eclipse Temurin ?

The Eclipse Temurin project provides code and processes that support the building of runtime binaries and associated technologies that are high performance, enterprise-caliber, cross-platform, open-source licensed, and Java SE TCK-tested for general use across the Java ecosystem.

logo
Do you provide JRE (Java Runtime Environment) Images?

JRE images are available for all versions of Eclipse Temurin but it is recommended that you produce a custom JRE-like runtime using jlink (see usage below).
Can I add my internal CA certificates to the truststore?

Yes! Add your certificates to /certificates inside the container (e.g. by using a volume) and set the environment variable USE_SYSTEM_CA_CERTS on the container to any value. With Docker CLI this might look like this:

$ docker run -v $(pwd)/certs:/certificates/ -e USE_SYSTEM_CA_CERTS=1 eclipse-temurin:21

The certificates would get added to the system CA store, which would in turn be converted to Java's truststore. The format of the certificates depends on what the OS of the base image used expects, but PEM format with a .crt file extension is a good bet. Please note: this feature is currently not available for Windows-based images.
How to use this Image

To run a pre-built jar file with the latest OpenJDK 21, use the following Dockerfile:

FROM eclipse-temurin:21
RUN mkdir /opt/app
COPY japp.jar /opt/app
CMD ["java", "-jar", "/opt/app/japp.jar"]

You can build and run the Docker Image as shown in the following example:

docker build -t japp .
docker run -it --rm japp

Using a different base Image

If you are using a distribution that we don't provide an image for you can copy the JDK using a similar Dockerfile to the one below:

# Example
FROM <base image>
ENV JAVA_HOME=/opt/java/openjdk
COPY --from=eclipse-temurin:21 $JAVA_HOME $JAVA_HOME
ENV PATH="${JAVA_HOME}/bin:${PATH}"

Creating a JRE using jlink

On OpenJDK 11+, a JRE can be generated using jlink, see the following Dockerfile:

# Example of custom Java runtime using jlink in a multi-stage container build
FROM eclipse-temurin:21 as jre-build

# Create a custom Java runtime
RUN $JAVA_HOME/bin/jlink \
         --add-modules java.base \
         --strip-debug \
         --no-man-pages \
         --no-header-files \
         --compress=2 \
         --output /javaruntime

# Define your base image
FROM debian:buster-slim
ENV JAVA_HOME=/opt/java/openjdk
ENV PATH "${JAVA_HOME}/bin:${PATH}"
COPY --from=jre-build /javaruntime $JAVA_HOME

# Continue with your application deployment
RUN mkdir /opt/app
COPY japp.jar /opt/app
CMD ["java", "-jar", "/opt/app/japp.jar"]

If you want to place the jar file on the host file system instead of inside the container, you can mount the host path onto the container by using the following commands:

FROM eclipse-temurin:21.0.2_13-jdk
CMD ["java", "-jar", "/opt/app/japp.jar"]

docker build -t japp .
docker run -it -v /path/on/host/system/jars:/opt/app japp

Image Variants

The eclipse-temurin images come in many flavors, each designed for a specific use case.
eclipse-temurin:<version>

This is the defacto image. If you are unsure about what your needs are, you probably want to use this one. It is designed to be used both as a throw away container (mount your source code and start the container to start your app), as well as the base to build other images off of.

Some of these tags may have names like focal, jammy, or noble in them. These are the suite code names for releases of Ubuntu⁠

and indicate which release the image is based on. If your image needs to install any additional packages beyond what comes with the image, you'll likely want to specify one of these explicitly to minimize breakage when there are new releases of Ubuntu.
eclipse-temurin:<version>-alpine

This image is based on the popular Alpine Linux project⁠

, available in the alpine official image. Alpine Linux is much smaller than most distribution base images (~5MB), and thus leads to much slimmer images in general.

This variant is useful when final image size being as small as possible is your primary concern. The main caveat to note is that it does use musl libc⁠
instead of glibc and friends⁠, so software will often run into issues depending on the depth of their libc requirements/assumptions. See this Hacker News comment thread⁠

for more discussion of the issues that might arise and some pro/con comparisons of using Alpine-based images.

To minimize image size, it's uncommon for additional related tools (such as git or bash) to be included in Alpine-based images. Using this image as a base, add the things you need in your own Dockerfile (see the alpine image description for examples of how to install packages if you are unfamiliar).
eclipse-temurin:<version>-windowsservercore

This image is based on Windows Server Core (microsoft/windowsservercore). As such, it only works in places which that image does, such as Windows 10 Professional/Enterprise (Anniversary Edition) or Windows Server 2016.

For information about how to get Docker running on Windows, please see the relevant "Quick Start" guide provided by Microsoft:

    Windows Server Quick Start⁠

Windows 10 Quick Start⁠
License

The Dockerfiles and associated scripts are licensed under the Apache License, Version 2.0⁠

Licenses for the products installed within the images:

    OpenJDK: The project license is GNU GPL v2 with Classpath Exception.

As with all Docker images, these likely also contain other software which may be under other licenses (such as Bash, etc from the base distribution, along with any direct or indirect dependencies of the primary software being contained).

Some additional license information which was able to be auto-detected might be found in the repo-info repository's eclipse-temurin/ directory⁠

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

https://docs.docker.com/engine/containers/run/

Commands and arguments

You can use the [COMMAND] and [ARG...] positional arguments to specify commands and arguments for the container to run when it starts up. For example, you can specify sh as the [COMMAND], combined with the -i and -t flags, to start an interactive shell in the container (if the image you select has an sh executable on PATH).

 docker run -it IMAGE sh

 Foreground and background

When you start a container, the container runs in the foreground by default. If you want to run the container in the background instead, you can use the --detach (or -d) flag. This starts the container without occupying your terminal window.

 docker run -d IMAGE

While the container runs in the background, you can interact with the container using other CLI commands. For example, docker logs lets you view the logs for the container, and docker attach brings it to the foreground.

 docker run -d nginx
0246aa4d1448a401cabd2ce8f242192b6e7af721527e48a810463366c7ff54f1

 docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS        PORTS     NAMES
0246aa4d1448   nginx     "/docker-entrypoint.…"   2 seconds ago   Up 1 second   80/tcp    pedantic_liskov

 docker logs -n 5 0246aa4d1448
2023/11/06 15:58:23 [notice] 1#1: start worker process 33
2023/11/06 15:58:23 [notice] 1#1: start worker process 34
2023/11/06 15:58:23 [notice] 1#1: start worker process 35
2023/11/06 15:58:23 [notice] 1#1: start worker process 36
2023/11/06 15:58:23 [notice] 1#1: start worker process 37

 docker attach 0246aa4d1448
^C
2023/11/06 15:58:40 [notice] 1#1: signal 2 (SIGINT) received, exiting
...

For more information about docker run flags related to foreground and background modes, see:

    docker run --detach

: run container in background
docker run --attach
: attach to stdin, stdout, and stderr
docker run --tty
: allocate a pseudo-tty
docker run --interactive

    : keep stdin open even if not attached

For more information about re-attaching to a background container, see docker attach

docker run -it ubuntu:24.04 /bin/bash

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

https://hub.docker.com/r/amd64/eclipse-temurin/tags?name=8
docker pull amd64/eclipse-temurin:8u432-b06-jdk
docker pull amd64/eclipse-temurin:8u432-b06-jre

https://hub.docker.com/r/amd64/eclipse-temurin/tags?name=11
docker pull amd64/eclipse-temurin:11.0.25_9-jdk
docker pull amd64/eclipse-temurin:11.0.25_9-jre

https://hub.docker.com/r/amd64/eclipse-temurin/tags?name=17
docker pull amd64/eclipse-temurin:17.0.13_11-jdk
docker pull amd64/eclipse-temurin:17.0.13_11-jre

https://hub.docker.com/r/amd64/eclipse-temurin/tags?name=21
docker pull amd64/eclipse-temurin:21.0.5_11-jdk
docker pull amd64/eclipse-temurin:21.0.5_11-jre

C:\>docker images
REPOSITORY              TAG              IMAGE ID       CREATED         SIZE
amd64/eclipse-temurin   17.0.13_11-jre   6564d80723d3   3 weeks ago     263MB
amd64/eclipse-temurin   21.0.5_11-jdk    dc4d32ecff31   3 weeks ago     447MB
amd64/eclipse-temurin   17.0.13_11-jdk   83cf92461326   3 weeks ago     419MB
amd64/eclipse-temurin   21.0.5_11-jre    43b609608ac1   3 weeks ago     287MB
hellonebula17           latest           f3ed7c8c09d2   5 weeks ago     437MB
amd64/eclipse-temurin   21.0.4_7-jdk     1fb508d963b8   2 months ago    442MB
amd64/eclipse-temurin   17.0.12_7-jdk    14ef1a4e4983   2 months ago    414MB
debian                  latest           5027089adc4c   6 months ago    117MB
eclipse-temurin         17-jdk-focal     bfa8957a99b7   6 months ago    411MB
nginx                   1.23             a7be6198544f   18 months ago   142MB
busybox                 latest           8135583d97fe   18 months ago   4.86MB
hello-world             latest           9c7a54a9a43c   18 months ago   13.3kB
nginx                   1.22             0f8498f13f3a   19 months ago   142MB

C:\>

docker run --name foo -d -it amd64/eclipse-temurin:21.0.5_11-jdk sh
docker run --name foo2 -d -it -p 8080:8080 amd64/eclipse-temurin:21.0.5_11-jdk sh
docker run --name foo3 -d -it -p 80:80 amd64/eclipse-temurin:21.0.5_11-jdk /bin/bash

C:\>docker run --name foo -d -it amd64/eclipse-temurin:21.0.5_11-jdk sh
783499375a1246a46776909849315569490b6f826aa8282537b963d09e046850

C:\>docker container ls
CONTAINER ID   IMAGE                                 COMMAND                  CREATED          STATUS          PORTS     NAMES
783499375a12   amd64/eclipse-temurin:21.0.5_11-jdk   "/__cacert_entrypoin…"   39 seconds ago   Up 39 seconds             foo

C:\>docker run --name foo2 -d -it -p 8080:8080 amd64/eclipse-temurin:21.0.5_11-jdk sh
7e2c1dcf38181a841615140be77e759e376fa7690c7356fde71e3f82cf96ea5a

C:\>docker container ls
CONTAINER ID   IMAGE                                 COMMAND                  CREATED          STATUS          PORTS                    NAMES
7e2c1dcf3818   amd64/eclipse-temurin:21.0.5_11-jdk   "/__cacert_entrypoin…"   11 seconds ago   Up 10 seconds   0.0.0.0:8080->8080/tcp   foo2
783499375a12   amd64/eclipse-temurin:21.0.5_11-jdk   "/__cacert_entrypoin…"   3 minutes ago    Up 3 minutes                             foo

C:\>
C:\>docker run --name foo3 -d -it -p 80:80 amd64/eclipse-temurin:21.0.5_11-jdk /bin/bash
437c57143427fea54c52488a7651ab8d4fb85beebdd834b377b1ea4f8488076b

C:\>docker container ls
CONTAINER ID   IMAGE                                 COMMAND                  CREATED         STATUS         PORTS                    NAMES
437c57143427   amd64/eclipse-temurin:21.0.5_11-jdk   "/__cacert_entrypoin…"   7 seconds ago   Up 6 seconds   0.0.0.0:80->80/tcp       foo3
7e2c1dcf3818   amd64/eclipse-temurin:21.0.5_11-jdk   "/__cacert_entrypoin…"   5 minutes ago   Up 5 minutes   0.0.0.0:8080->8080/tcp   foo2
783499375a12   amd64/eclipse-temurin:21.0.5_11-jdk   "/__cacert_entrypoin…"   7 minutes ago   Up 7 minutes                            foo

C:\>
C:\>docker logs -n 5 foo3

C:\>docker logs -n 5 foo2

C:\>docker logs -n 5 foo

C:\>

C:\>docker attach foo3
root@437c57143427:/# java -version
openjdk version "21.0.5" 2024-10-15 LTS
OpenJDK Runtime Environment Temurin-21.0.5+11 (build 21.0.5+11-LTS)
OpenJDK 64-Bit Server VM Temurin-21.0.5+11 (build 21.0.5+11-LTS, mixed mode, sharing)
root@437c57143427:/#
root@437c57143427:/# javac -version
javac 21.0.5
root@437c57143427:/# whereis java
java: /opt/java/openjdk/bin/java
root@437c57143427:/#
root@437c57143427:/# uname -a
Linux 437c57143427 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux
root@437c57143427:/#
root@437c57143427:/# whoami
root
root@437c57143427:/#
root@437c57143427:/# ^C
root@437c57143427:/#
exit

C:\>

